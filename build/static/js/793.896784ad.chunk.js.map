{"version":3,"file":"static/js/793.896784ad.chunk.js","mappings":"6VAIA,M,QAAeA,EAAMC,OAAO,CACxBC,QAHa,M,UCkBjB,MAjBwBC,KACpB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,KAapB,OAXgBC,UACZ,MAAMC,QAAiBP,EAAMQ,IAAI,WAAY,CACzCC,iBAAiB,IAOrB,OALAL,GAAQM,IACJC,QAAQC,IAAIC,KAAKC,UAAUJ,IAC3BC,QAAQC,IAAIL,EAASQ,KAAKC,aACnB,IAAKN,EAAMM,YAAaT,EAASQ,KAAKC,gBAE1CT,EAASQ,KAAKC,WAAW,CAEtB,EC0BlB,MAtCwBC,KACpB,MAAMC,EAAUf,KACV,KAAEgB,IAASd,EAAAA,EAAAA,KAiCjB,OA/BAe,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAmBrB,EAAAA,EAAMsB,aAAaC,QAAQC,KAChDC,IACSA,EAAOC,QAAuB,gBAC/BD,EAAOC,QAAuB,cAAK,UAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMH,eAE/CS,KACPE,GAAUC,QAAQC,OAAOF,KAG3BG,EAAoB9B,EAAAA,EAAMsB,aAAaf,SAASiB,KAClDjB,GAAYA,IACZD,UAAkB,IAADyB,EACb,MAAMC,EAAmB,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOF,OAC3B,GAAgC,OAAvB,OAALE,QAAK,IAALA,GAAe,QAAVI,EAALJ,EAAOpB,gBAAQ,IAAAwB,OAAV,EAALA,EAAiBE,UAA8B,OAAXD,QAAW,IAAXA,IAAAA,EAAaE,MAAM,CACvDF,EAAYE,MAAO,EACnB,MAAMC,QAAuBjB,IAE7B,OADAc,EAAYN,QAAuB,cAAK,UAASS,KAC1CnC,EAAAA,EAAAA,GAAMgC,EACjB,CACA,OAAOJ,QAAQC,OAAOF,EAAM,IAIpC,MAAO,KACH3B,EAAAA,EAAMsB,aAAaC,QAAQa,MAAMf,GACjCrB,EAAAA,EAAMsB,aAAaf,SAAS6B,MAAMN,EAAkB,CACvD,GACF,CAACX,EAAMD,IAEHlB,EAAAA,CAAK,E,qDC8IhB,MApKoBqC,KAClB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,QAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KACnC,MACJK,EAAK,SACLC,EAAQ,aACRC,EAAY,gBACZC,EAAe,UACfC,EAAS,aACTC,EAAY,kBACZC,EAAiB,qBACjBC,IACEC,EAAAA,EAAAA,MAEE,SAAE9C,EAAQ,MAAEoB,GCdQ2B,MAC1B,MAAMC,EAAetC,KACdV,EAAUiD,IAAehB,EAAAA,EAAAA,UAAS,OAClCb,EAAO8B,IAAYjB,EAAAA,EAAAA,UAAS,OAC7B,MAAEK,IAASQ,EAAAA,EAAAA,KAejB,OAbAjC,EAAAA,EAAAA,YAAU,KACUd,WAChB,IACE,MAAMC,QAAiBgD,EAAa/C,IAAI,SACxCgD,EAAYjD,EACd,CAAE,MAAOoB,GACP8B,EAAS9B,EACX,GAGF+B,EAAW,GACV,CAACH,EAAaV,IAEV,CAAEtC,WAAUoB,QAAO,EDLE2B,IACtB,WAAEK,GCSmBC,MAC3B,MAAML,EAAetC,KACf,MAAE4B,EAAK,SAAEC,IAAaO,EAAAA,EAAAA,KAW5B,MAAO,CAAEM,WAVUrD,UACjB,IACE,MAAMC,QAAiBgD,EAAaM,OAAO,QAAS,CAAE9C,KAAM,CAAE+C,YAE9D,OADAhB,EAASD,EAAM,GACRtC,CACT,CAAE,MAAOoB,GACP,MAAMA,CACR,GAGmB,EDtBEiC,IAEvBxC,EAAAA,EAAAA,YAAU,KACJb,GACFqC,EAAYrC,EAASQ,KACvB,GACC,CAACR,KAEJa,EAAAA,EAAAA,YAAU,KACJO,GACFhB,QAAQgB,MAAM,yBAA0BA,EAC1C,GACC,CAACA,KAEJP,EAAAA,EAAAA,YAAU,QAEP,CAACyB,IAEJ,MAeMkB,EAAoBA,CAACC,EAAOC,KAEhC1B,EADcE,IAAYwB,GAAsB,QAAV3B,EACrB,OAAS,OAC1BI,EAAWuB,EAAS,EAGtB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMJ,UAC/BF,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAAC,aAAW,eAAcL,SAAA,EAC9BC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAAN,UACRF,EAAAA,EAAAA,MAACS,EAAAA,EAAQ,CAAAP,SAAA,EACPC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRF,EAAAA,EAAAA,MAACW,EAAAA,EAAc,CACbC,OAAoB,iBAAZrC,EACRsC,UAAuB,iBAAZtC,EAA6BH,EAAQ,MAChD0C,QAAUhB,GAAUD,EAAkBC,EAAO,gBAAgBI,SAAA,CAC9D,gBAEc,iBAAZ3B,GACC4B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,IAAKC,EAAAA,GAAiBd,SACtB,SAAV9B,EACG,oBACA,qBAEJ,WAGR+B,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRF,EAAAA,EAAAA,MAACW,EAAAA,EAAc,CACbC,OAAoB,aAAZrC,EACRsC,UAAuB,aAAZtC,EAAyBH,EAAQ,MAC5C0C,QAAUhB,GAAUD,EAAkBC,EAAO,YAAYI,SAAA,CAC1D,YAEc,aAAZ3B,GACC4B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,IAAKC,EAAAA,GAAiBd,SACtB,SAAV9B,EACG,oBACA,qBAEJ,WAGR+B,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRF,EAAAA,EAAAA,MAACW,EAAAA,EAAc,CACbC,OAAoB,gBAAZrC,EACRsC,UAAuB,gBAAZtC,EAA4BH,EAAQ,MAC/C0C,QAAUhB,GAAUD,EAAkBC,EAAO,eAAeI,SAAA,CAC7D,gBAEc,gBAAZ3B,GACC4B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,IAAKC,EAAAA,GAAiBd,SACtB,SAAV9B,EACG,oBACA,qBAEJ,WAGR+B,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAC,kBACXC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,UAGdP,EAAAA,EAAAA,KAACc,EAAAA,EAAS,CAAAf,SACa,IAApBzB,EAASyC,QACRf,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAAAP,UACPC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAACS,QAAS,EAAGC,MAAM,SAAQlB,SAAC,2BAKxCzB,EAAS4C,KAAKC,IACZtB,EAAAA,EAAAA,MAACS,EAAAA,EAAQ,CAAkBc,OAAK,EAAArB,SAAA,EAC9BC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAEoB,EAAIE,gBAChBrB,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAEoB,EAAIG,YAChBtB,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAEoB,EAAII,eAChBvB,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SACPoB,EAAIK,YACHxB,EAAAA,EAAAA,KAAA,OACEyB,IAAKN,EAAIK,UACTE,IAAI,OACJd,MAAO,CAAEe,MAAO,QAASC,OAAQ,aAIvC5B,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACRC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAAClB,QAASA,IAtGlB1E,WACnB,IACE,MAAMC,QAAiBoD,EAAWG,GAClCnD,QAAQC,IAAIL,EAAS0B,QACE,KAAnB1B,EAAS0B,QACXmB,GAAqB,GAEvBN,EAASD,EAAQ,EACnB,CAAE,MAAOlB,GACPqB,EAAgBrB,GAChBuB,GAAa,GACbvC,QAAQC,IAAIe,EACd,GA0F2CwE,CAAaX,EAAI1B,QAAQM,UAClDC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,UAfEZ,EAAI1B,iBAwB5BX,IACCkB,EAAAA,EAAAA,KAACgC,EAAAA,EAAiB,CAChBC,QAAQ,6BACRC,SAAS,YAQZtD,IACCoB,EAAAA,EAAAA,KAACgC,EAAAA,EAAiB,CAACC,QAASvD,EAAcwD,SAAS,YAEpD,E,oBE5KQ,SAASC,IACtB,MAAOC,EAAMC,GAAWC,EAAAA,UAAe,IACjC,aAACC,IAAgBvD,EAAAA,EAAAA,KAYvB,OANAjC,EAAAA,EAAAA,YAAU,KACRsF,EAAQE,GACRjG,QAAQC,IAAI,kCAAkC,GAC7C,KAIDyD,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CACPC,GAAI,CAAEC,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAC9DT,KAAMA,EACNzB,QAjBcmC,KAClBT,GAAQ,GACR/F,QAAQC,IAAI,4BAA4B,EAefwD,UAErBC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CAACL,MAAM,eAIhC,CCyJA,MAvKeM,KAEb,MAAM,WAACC,GFfoBC,MAC3B,MAAMhE,EAAetC,IAUrB,MAAO,CAAEqG,WATUhH,UACjB,IAEE,aADuBiD,EAAaiE,KAAK,QAASzG,EAEpD,CAAE,MAAOY,GACP,MAAMA,CACR,GAGmB,EEIA4F,IAEdE,EAAUC,IAAelF,EAAAA,EAAAA,UAAS,CACvCkD,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,MAGP,MAAEhD,EAAK,SAAEC,EAAQ,aAAC8D,EAAY,gBAAGe,EAAe,UAAE1E,EAAS,aAACC,EAAY,YAAC0E,EAAW,eAACC,EAAc,aAAE9E,EAAY,gBAACC,EAAe,qBAAGI,IAAyBC,EAAAA,EAAAA,KAE7JyE,EAAgB9D,IACpB0D,EAAY,IACPD,EACH,CAACzD,EAAM+D,OAAOC,MAAOhE,EAAM+D,OAAOE,OAClC,EAgDEhB,GAAQiB,EAAAA,EAAAA,KACd,OACEhE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACEwC,IACAvC,EAAAA,EAAAA,KAACmC,EAAoB,KAErBnC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,MAAM,aAAYhE,UAC1BF,EAAAA,EAAAA,MAAA,QACEmE,SAzCa/H,UACnB0D,EAAMsE,iBAEN,IACE,MAAM/H,QAAiB+G,EAAWG,GAClC9G,QAAQC,IAAIL,EAAS0B,QACrB0F,GAAgB,GACO,KAAnBpH,EAAS0B,SACX4F,GAAe,GACdF,GAAgB,IAInB7E,EAASD,EAAQ,EACnB,CAAE,MAAOlB,GACPuB,GAAa,GACbF,EAAgBrB,EAAMpB,SAASQ,MAC/BJ,QAAQC,IAAIe,EAAMpB,SAASQ,KAC7B,CAGA2G,EAAY,CACVhC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,UAAW,KAEb,MAAM0C,EAAYC,SAASC,cAAc,sBACrCF,IACFA,EAAUN,MAAQ,GACpB,EAYMhD,MAAO,CAAEyD,QAAS,OAAQC,SAAU,OAAQC,IAAK,QACjDC,QAAQ,sBAAqBzE,SAAA,EAG7BF,EAAAA,EAAAA,MAAC4E,EAAAA,EAAW,CACVhC,GAAI,CACFd,MAAO,IACP,CAACiB,EAAM8B,YAAYC,KAAK,OAAQ,CAAEhD,MAAO,SACzC5B,SAAA,EAEFC,EAAAA,EAAAA,KAAC4E,EAAAA,EAAU,CAAA7E,SAAC,0BACZF,EAAAA,EAAAA,MAACgF,EAAAA,EAAM,CACLlB,KAAK,eACLmB,MAAM,uBACNlB,MAAOR,EAAS/B,aAChB0D,SAAUtB,EACVuB,UAAQ,EAAAjF,SAAA,EAERC,EAAAA,EAAAA,KAACiF,EAAAA,EAAQ,CAACrB,MAAM,GAAE7D,SAAC,0BACnBC,EAAAA,EAAAA,KAACiF,EAAAA,EAAQ,CAACrB,MAAM,SAAQ7D,SAAC,YACzBC,EAAAA,EAAAA,KAACiF,EAAAA,EAAQ,CAACrB,MAAM,SAAQ7D,SAAC,kBAI7BC,EAAAA,EAAAA,KAACyE,EAAAA,EAAW,CACVhC,GAAI,CACFd,MAAO,IACP,CAACiB,EAAM8B,YAAYC,KAAK,OAAQ,CAAEhD,MAAO,SACzC5B,UAEFC,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,CACRJ,MAAM,YACNnB,KAAK,WACLC,MAAOR,EAAS9B,SAChByD,SAAUtB,EACVuB,UAAQ,OAGZhF,EAAAA,EAAAA,KAACyE,EAAAA,EAAW,CACVhC,GAAI,CACFd,MAAO,IACP,CAACiB,EAAM8B,YAAYC,KAAK,OAAQ,CAAEhD,MAAO,SACzC5B,UAEFC,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,CACRJ,MAAM,gBACNnB,KAAK,cACLC,MAAOR,EAAS7B,YAChBwD,SAAUtB,EACVuB,UAAQ,OAGZhF,EAAAA,EAAAA,KAACyE,EAAAA,EAAW,CACVhC,GAAI,CACFd,MAAO,IACP,CAACiB,EAAM8B,YAAYC,KAAK,OAAQ,CAAEhD,MAAO,SACzC5B,UAGFC,EAAAA,EAAAA,KAAA,SACEmF,KAAK,OACLxB,KAAK,YACLoB,SApHepF,IACzB,MAAMyF,EAAOzF,EAAM+D,OAAO2B,MAAM,GAC1BC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjBnC,EAAY,IACPD,EACH5B,UAAW8D,EAAOG,QAClB,EAEJH,EAAOI,cAAcN,EAAK,EA4GhBO,UAAU,oBAEVX,UAAQ,OAGZhF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAM,CACLT,KAAK,SACLU,QAAQ,YACRpD,GAAI,CAAEd,MAAO,IAAKmE,eAAgB,UAAW/F,SAC9C,iBAKLC,EAAAA,EAAAA,KAAA,OAAK2F,UAAU,WACf3F,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,CAACC,MAAM,SAAQhE,UACtBC,EAAAA,EAAAA,KAAChC,EAAW,MAEbuF,IACavD,EAAAA,EAAAA,KAACgC,EAAAA,EAAiB,CAACC,QAAQ,2BAA2BC,SAAS,YAI7EtD,IACAoB,EAAAA,EAAAA,KAACgC,EAAAA,EAAiB,CAACC,QAASvD,EAAcwD,SAAS,YAElD,C","sources":["utils/axios.js","hooks/useRefreshToken.js","hooks/useAxiosPrivate.js","components/ui-component/tables/LensesTable.js","api/lenses/lensAPI.js","components/alerts/BackDropNotification.js","views/lens/index.js"],"sourcesContent":["import axios from 'axios';\n// const BASE_URL = 'https://hologo-dash-api.onrender.com';\nconst BASE_URL = '/'\n\nexport default axios.create({\n    baseURL: BASE_URL\n});\n\n","import axios from './../utils/axios';\nimport useAuth from './useAuth';\n\nconst useRefreshToken = () => {\n    const { setAuth } = useAuth();\n\n    const refresh = async () => {\n        const response = await axios.get('/refresh', {\n            withCredentials: true\n        });\n        setAuth(prev => {\n            console.log(JSON.stringify(prev));\n            console.log(response.data.accessToken);\n            return { ...prev, accessToken: response.data.accessToken }\n        });\n        return response.data.accessToken;\n    }\n    return refresh;\n};\n\nexport default useRefreshToken;","import  axios  from \"../utils/axiosPrivate\";\nimport { useEffect } from \"react\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport useAuth from \"./useAuth\";\n\nconst useAxiosPrivate = () => {\n    const refresh = useRefreshToken();\n    const { auth } = useAuth();\n\n    useEffect(() => {\n\n        const requestIntercept = axios.interceptors.request.use(\n            config => {\n                if (!config.headers['Authorization']) {\n                    config.headers['Authorization'] = `Bearer ${auth?.accessToken}`;\n                }\n                return config;\n            }, (error) => Promise.reject(error)\n        );\n\n        const responseIntercept = axios.interceptors.response.use(\n            response => response,\n            async (error) => {\n                const prevRequest = error?.config;\n                if (error?.response?.status === 403 && !prevRequest?.sent) {\n                    prevRequest.sent = true;\n                    const newAccessToken = await refresh();\n                    prevRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n                    return axios(prevRequest);\n                }\n                return Promise.reject(error);\n            }\n        );\n\n        return () => {\n            axios.interceptors.request.eject(requestIntercept);\n            axios.interceptors.response.eject(responseIntercept);\n        }\n    }, [auth, refresh])\n\n    return axios;\n}\n\nexport default useAxiosPrivate;","import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport { useDeleteLens, useGetLenses } from \"api/lenses/lensAPI\";\nimport { useEffect } from \"react\";\nimport { Delete } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\nimport { useGlobal } from \"context/GlobalContext\";\nimport { width } from \"@mui/system\";\nimport AlertNotification from \"components/alerts/AlertNotification\";\n\nconst LensesTable = () => {\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"\");\n  const [lensData, setLensData] = useState([]);\n  const {\n    fetch,\n    setFetch,\n    errorMessage,\n    setErrorMessage,\n    showError,\n    setShowError,\n    showDeleteSuccess,\n    setShowDeleteSuccess,\n  } = useGlobal();\n\n  const { response, error } = useGetLenses(); // Call the custom hook here\n  const { deleteLens } = useDeleteLens();\n\n  useEffect(() => {\n    if (response) {\n      setLensData(response.data);\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (error) {\n      console.error(\"Error fetching Lenses:\", error);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    // fetchLenses();\n  }, [fetch]);\n\n  const handleDelete = async (lensID) => {\n    try {\n      const response = await deleteLens(lensID);\n      console.log(response.status);\n      if (response.status == 200) {\n        setShowDeleteSuccess(true);\n      }\n      setFetch(fetch + 1);\n    } catch (error) {\n      setErrorMessage(error);\n      setShowError(true);\n      console.log(error);\n    }\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"Lenses table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"lensCategory\"}\n                  direction={orderBy === \"lensCategory\" ? order : \"asc\"}\n                  onClick={(event) => handleRequestSort(event, \"lensCategory\")}\n                >\n                  Lens Category\n                  {orderBy === \"lensCategory\" ? (\n                    <span style={{ ...visuallyHidden }}>\n                      {order === \"desc\"\n                        ? \"sorted descending\"\n                        : \"sorted ascending\"}\n                    </span>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"lensName\"}\n                  direction={orderBy === \"lensName\" ? order : \"asc\"}\n                  onClick={(event) => handleRequestSort(event, \"lensName\")}\n                >\n                  Lens Name\n                  {orderBy === \"lensName\" ? (\n                    <span style={{ ...visuallyHidden }}>\n                      {order === \"desc\"\n                        ? \"sorted descending\"\n                        : \"sorted ascending\"}\n                    </span>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell>\n                <TableSortLabel\n                  active={orderBy === \"lensGroupID\"}\n                  direction={orderBy === \"lensGroupID\" ? order : \"asc\"}\n                  onClick={(event) => handleRequestSort(event, \"lensGroupID\")}\n                >\n                  Lens Group ID\n                  {orderBy === \"lensGroupID\" ? (\n                    <span style={{ ...visuallyHidden }}>\n                      {order === \"desc\"\n                        ? \"sorted descending\"\n                        : \"sorted ascending\"}\n                    </span>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell> Lens Image </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {lensData.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={4} align=\"center\">\n                  No lenses to display\n                </TableCell>\n              </TableRow>\n            ) : (\n              lensData.map((row) => (\n                <TableRow key={row.lensID} hover>\n                  <TableCell>{row.lensCategory}</TableCell>\n                  <TableCell>{row.lensName}</TableCell>\n                  <TableCell>{row.lensGroupID}</TableCell>\n                  <TableCell>\n                    {row.lensImage && (\n                      <img\n                        src={row.lensImage}\n                        alt=\"Lens\"\n                        style={{ width: \"200px\", height: \"auto\" }}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <IconButton onClick={() => handleDelete(row.lensID)}>\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {showDeleteSuccess && (\n        <AlertNotification\n          message=\"Lens deleted successfully.\"\n          severity=\"success\"\n        />\n\n        \n      \n      )\n        \n      }\n      {showError && (\n        <AlertNotification message={errorMessage} severity=\"error\" />\n      )}\n    </>\n  );\n};\n\nexport default LensesTable;\n","import axios from \"./../../utils/axiosPrivate\";\nimport useAxiosPrivate from \"hooks/useAxiosPrivate\";\nimport { useState,useEffect } from \"react\";\nimport { useGlobal } from \"context/GlobalContext\";\n\nexport const useCreateLens = () => {\n  const axiosPrivate = useAxiosPrivate();\n  const createLens = async (data) => {\n    try {\n      const response = await axiosPrivate.post(\"/lens\", data);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return { createLens }; // Return createLens function\n};\n\nexport const useGetLenses = () => {\n  const axiosPrivate = useAxiosPrivate();\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const { fetch} = useGlobal();\n\n  useEffect(() => {\n    const getLenses = async () => {\n      try {\n        const response = await axiosPrivate.get(\"/lens\");\n        setResponse(response);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getLenses();\n  }, [axiosPrivate,fetch]);\n\n  return { response, error };\n};\n\n\n\nexport const useDeleteLens = () => {\n  const axiosPrivate = useAxiosPrivate();\n  const { fetch ,setFetch } = useGlobal();\n  const deleteLens = async (lensID) => {\n    try {\n      const response = await axiosPrivate.delete(\"/lens\", { data: { lensID } });\n      setFetch(fetch+1);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return { deleteLens }; // Return delete function\n};\n\n\nexport const EditLens = async (lensID, updatedData) => {\n  try {\n    const response = await axios.put(`/lens/${lensID}`, updatedData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"ngrok-skip-browser-warning\": \"0\",\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useEffect } from 'react';\nimport { useGlobal } from 'context/GlobalContext';\n\nexport default function BackDropNotification() {\n  const [open, setOpen] = React.useState(false);\n  const {showBackdrop} = useGlobal();\n  const handleClose = () => {\n    setOpen(false);\n    console.log(\"BackDrop notification off\");\n\n  };\n  useEffect(() => {\n    setOpen(showBackdrop);\n    console.log(\"BackDrop notification triggered\");\n  }, []); // \n\n\n  return (\n    <div>\n    \n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport MainCard from \"components/ui-component/cards/MainCard\";\nimport { useTheme } from \"@mui/material/styles\";\nimport \"./lens.custom.css\";\nimport LensesTable from \"components/ui-component/tables/LensesTable\";\nimport { useCreateLens } from \"api/lenses/lensAPI\";\nimport { useGlobal } from \"context/GlobalContext\";\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport BackDropNotification from \"components/alerts/BackDropNotification\";\nimport AlertNotification from \"components/alerts/AlertNotification\";\n\nconst Lenses = () => {\n\n  const {createLens} = useCreateLens()\n\n  const [formData, setFormData] = useState({\n    lensCategory: \"\",\n    lensName: \"\",\n    lensGroupID: \"\",\n    lensImage: \"\", // We will store base64 image here\n  });\n\n  const { fetch, setFetch,showBackdrop , setShowBackDrop ,showError,setShowError,showSuccess,setShowSuccess ,errorMessage,setErrorMessage , setShowDeleteSuccess } = useGlobal();\n\n  const handleChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setFormData({                                                                     \n        ...formData,\n        lensImage: reader.result, // Set base64 encoded image\n      });\n    };\n    reader.readAsDataURL(file); // Read file as data URL (base64 encoded)\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await createLens(formData);\n      console.log(response.status);\n      setShowBackDrop(true)\n      if (response.status == 201){\n        setShowSuccess(true)\n         setShowBackDrop(false)\n      }\n\n\n      setFetch(fetch + 1);\n    } catch (error) {\n      setShowError(true)\n      setErrorMessage(error.response.data)\n      console.log(error.response.data);\n    }\n\n    // Reset form data\n    setFormData({\n      lensCategory: \"\",\n      lensName: \"\",\n      lensGroupID: \"\",\n      lensImage: \"\",\n    });\n    const fileInput = document.querySelector('input[type=\"file\"]');\n    if (fileInput) {\n      fileInput.value = \"\"; // Reset the value to clear the file input field\n    }\n  };\n\n  const theme = useTheme();\n  return (\n    <>\n    { showBackdrop &&\n      <BackDropNotification/>\n    }\n      <MainCard title=\"Add Lenses\">\n        <form\n          onSubmit={handleSubmit}\n          style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"1rem\" }}\n          encType=\"multipart/form-data\"\n        >\n          {/* Set a fixed width for all FormControls and the Button */}\n          <FormControl\n            sx={{\n              width: 250,\n              [theme.breakpoints.down(\"sm\")]: { width: \"100%\" },\n            }}\n          >\n            <InputLabel>Select Lens Category</InputLabel>\n            <Select\n              name=\"lensCategory\"\n              label=\"Select Lens Category\"\n              value={formData.lensCategory}\n              onChange={handleChange}\n              required\n            >\n              <MenuItem value=\"\">Select Lens Category</MenuItem>\n              <MenuItem value=\"Humans\">Humans</MenuItem>\n              <MenuItem value=\"Plants\">Plants</MenuItem>\n              {/* Add more options as needed */}\n            </Select>\n          </FormControl>\n          <FormControl\n            sx={{\n              width: 250,\n              [theme.breakpoints.down(\"sm\")]: { width: \"100%\" },\n            }}\n          >\n            <TextField\n              label=\"Lens Name\"\n              name=\"lensName\"\n              value={formData.lensName}\n              onChange={handleChange}\n              required\n            />\n          </FormControl>\n          <FormControl\n            sx={{\n              width: 250,\n              [theme.breakpoints.down(\"sm\")]: { width: \"100%\" },\n            }}\n          >\n            <TextField\n              label=\"Lens Group ID\"\n              name=\"lensGroupID\"\n              value={formData.lensGroupID}\n              onChange={handleChange}\n              required\n            />\n          </FormControl>\n          <FormControl\n            sx={{\n              width: 250,\n              [theme.breakpoints.down(\"sm\")]: { width: \"100%\" },\n            }}\n          >\n            {/* <InputLabel>Lens Image</InputLabel> */}\n            <input\n              type=\"file\"\n              name=\"lensImage\"\n              onChange={handleImageChange}\n              className=\"custom-file-input\"\n              \n              required\n            />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            sx={{ width: 250, justifyContent: \"center\" }}\n          >\n            Submit\n          </Button>\n        </form>\n      </MainCard>\n      <div className=\"m-top\"></div>\n      <MainCard title=\"Lenses\">\n        <LensesTable  />\n      </MainCard>\n      {showSuccess &&\n                    <AlertNotification message=\"Lens added successfully.\" severity=\"success\" />\n    \n    }\n    {\n      showError &&\n      <AlertNotification message={errorMessage} severity=\"error\" />\n    }\n    </>\n  );\n};\n\nexport default Lenses;\n"],"names":["axios","create","baseURL","useRefreshToken","setAuth","useAuth","async","response","get","withCredentials","prev","console","log","JSON","stringify","data","accessToken","useAxiosPrivate","refresh","auth","useEffect","requestIntercept","interceptors","request","use","config","headers","error","Promise","reject","responseIntercept","_error$response","prevRequest","status","sent","newAccessToken","eject","LensesTable","order","setOrder","useState","orderBy","setOrderBy","lensData","setLensData","fetch","setFetch","errorMessage","setErrorMessage","showError","setShowError","showDeleteSuccess","setShowDeleteSuccess","useGlobal","useGetLenses","axiosPrivate","setResponse","setError","getLenses","deleteLens","useDeleteLens","delete","lensID","handleRequestSort","event","property","_jsxs","_Fragment","children","_jsx","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableSortLabel","active","direction","onClick","style","visuallyHidden","TableBody","length","colSpan","align","map","row","hover","lensCategory","lensName","lensGroupID","lensImage","src","alt","width","height","IconButton","handleDelete","Delete","AlertNotification","message","severity","BackDropNotification","open","setOpen","React","showBackdrop","Backdrop","sx","color","zIndex","theme","drawer","handleClose","CircularProgress","Lenses","createLens","useCreateLens","post","formData","setFormData","setShowBackDrop","showSuccess","setShowSuccess","handleChange","target","name","value","useTheme","MainCard","title","onSubmit","preventDefault","fileInput","document","querySelector","display","flexWrap","gap","encType","FormControl","breakpoints","down","InputLabel","Select","label","onChange","required","MenuItem","TextField","type","file","files","reader","FileReader","onloadend","result","readAsDataURL","className","Button","variant","justifyContent"],"sourceRoot":""}